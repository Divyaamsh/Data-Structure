#include <algorithm>

class Solution {
public:
    vector<int> findLonely(vector<int>& nums) {
                    sort(nums.begin(),nums.end());
                    int size = nums.size();
                    if(size == 1){
                       return nums; 
                    } 
                    vector<int> result;
                    
                    for(int i=1; i<size-1; i++){
                        if(nums[i] - nums[i-1] != 0 && nums[i] - nums[i-1] != 1 && nums[i+1] - nums[i] != 0 && nums[i+1] - nums[i] != 1){
                           result.push_back(nums[i]); 
                        }
                    }
                    
                    if( (nums[0]+1) != nums[1] && nums[0] != nums[1]){
                        result.push_back(nums[0]);   
                    }
                    if( (nums[size-2]+1) != nums[size-1] && nums[size-2] != nums[size-1]){
                        result.push_back(nums[size-1]);   
                    }
        
                    return result;  
        
    }
};

