class Solution {
        int check(long long n,unordered_map <int,int> &ourmap){
                 if(n == 1){
                    return 0; 
                 }
                 
                 if(ourmap.count(n) > 0){
                    return ourmap[n];
                 } 
                 int res1 = INT_MAX-1;
                 int res2 = INT_MAX-1;  
                 
                 if(n %2 == 0){
                    res1 = 1 + check(n/2,ourmap); 
                 }
                 else{
                    res1 = 1 + check(n-1,ourmap);
                    res2 = 1 + check(n+1,ourmap);
                 }
                 int res = min(res1,res2);
                 pair <int,int> p(n,res); 
                 ourmap.insert(p); 

                 return res;
        } 


public:
    int integerReplacement(int n) {
               unordered_map <int,int> ourmap;
               long long nn = n;
               int res = check(nn,ourmap);  
               
               return res; 
    }
};