class Solution {
public:
    int check(vector<vector<int>>& grid,int i,int j,int sizeC,int sizeR,vector<vector<int>>& visited){
             if(i < 0 || j < 0 || i > sizeC-1 || j > sizeR-1){
                return 0; 
             }
             if(grid[i][j] == 0 || visited[i][j] == 1){
                return 0; 
             }      
             visited[i][j] = 1; 
        
             int res1 = check(grid,i+1,j,sizeC,sizeR,visited);
             int res2 = check(grid,i-1,j,sizeC,sizeR,visited);
             int res3 = check(grid,i,j-1,sizeC,sizeR,visited);
             int res4 = check(grid,i,j+1,sizeC,sizeR,visited);

             return (1+res1+res2+res3+res4);    
               
    }
    
    int maxAreaOfIsland(vector<vector<int>>& grid) {
                 int sizeC = grid.size();
                 int sizeR = grid[0].size();
                 vector<vector<int>> visited(sizeC, vector<int>(sizeR, 0));
                 int max = 0;         
        
                 for(int i=0; i<sizeC; i++){
                     for(int j=0; j<sizeR; j++){
                         if(grid[i][j] == 1 && visited[i][j] == 0){ 
                            int value = check(grid,i,j,sizeC,sizeR,visited);
                            if(value > max){
                               max = value; 
                            } 
                         }
                     }
                 }          
        
                 return max;
    }
};

