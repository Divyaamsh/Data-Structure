class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
                 int size = nums.size();
                 if(size==1){return nums[0];}        
                 int start = 1;
                 int end = size-2;
                 int mid = 0;
                 
                 while(start <= end){
                      mid = (start + end)/2;

                      int value = nums[mid];
                      if(nums[mid-1] != value && nums[mid+1] != value){
                         return value; 
                      }

                      if(mid % 2 == 0){
                         if(nums[mid] == nums[mid+1]){
                            start = mid + 1;  
                         }
                         else{
                             end = mid - 1;
                         }
                      }
                      else{
                          if(nums[mid] == nums[mid-1]){
                            start = mid + 1;  
                         }
                         else{
                             end = mid - 1;
                         }

                      }
                       
                 }

                 if(nums[0] != nums[1]){
                    return nums[0]; 
                 }
                 if(nums[size-1] != nums[size-2]){
                    return nums[size-1]; 
                 }  
  
                 return -1; 
                                    
    }
};

