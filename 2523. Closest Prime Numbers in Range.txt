class Solution {
public:
    vector<int> closestPrimes(int left, int right) {
                       vector <int> primeNumbers;
                       bool *helperPrime = new bool[right+1]{0};                  
                       int i = 0;
        
                       for(i=2; i*i<=right; i++){
                           if(!helperPrime[i]){
                               if(i >= left){
                                  primeNumbers.push_back(i); 
                               }
                               int g = i+i;
                               while(g <= right){
                                     helperPrime[g] = true;                                    
                                     g = g + i;
                               }
                               
                           }
                       }    
        
                       for(;i<=right;i++){
                           if(!helperPrime[i]){
                               if(i >= left){
                                  primeNumbers.push_back(i); 
                               }
                           }   
                       }
        
                       int size2 = primeNumbers.size();
                       int q = 0;
                       vector <int> res;
                       res.push_back(-1);
                       res.push_back(-1); 
                       int diff = 987654;    
        
                        while(q < size2-1){
                              int value1 = primeNumbers[q];
                              int value2 = primeNumbers[q+1];
                            
                              if(value2-value1 < diff){
                                 diff = value2-value1;
                                 res.pop_back();
                                 res.pop_back();
                                  
                                 res.push_back(value1);
                                 res.push_back(value2); 
                                  
                              }
                            
                              q++;
                        }
                        
                       return res;
    
    }
};
