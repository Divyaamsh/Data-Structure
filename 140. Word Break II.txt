class Solution {
        void check(string s,int i,int size,unordered_map<string,int> &ourmap,string str,string str1,vector<string> &res){
                  if(i == size){
                     if(str1.size() == 0){
                        str.pop_back(); 
                        res.push_back(str); 
                     }
                     return;
                  }

                  str1 = str1 + s[i];
                  check(s,i+1,size,ourmap,str,str1,res);
                  if(ourmap.count(str1) > 0){
                     str = str + str1 + " ";
                     str1 = ""; 
                     check(s,i+1,size,ourmap,str,str1,res); 
                  }
                   
        }     

public:
    vector<string> wordBreak(string s, vector<string>& wordDict) {
                       string str = "";
                       string str1 = "";
                       int size = s.size();
                       int size1 = wordDict.size();
                       vector<string> res;  
                       unordered_map<string,int> ourmap; 

                       for(int i=0; i<size1; i++){
                           pair<string,int> p(wordDict[i],1);
                           ourmap.insert(p); 
                       }
                       
                       check(s,0,size,ourmap,str,str1,res);
                       return res;
    }
};

