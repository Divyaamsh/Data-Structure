class Solution {
public:
    int lengthOfLongestSubstring(string s) {
              int size = s.size();
              if(size == 1){ return 1;}
              int finalCount = 0;                       
        
              for(int i=0; i<size; i++){
                  unordered_map<string,int> ourmap;
                  int c = 0;
                  for(int j=i; j<size; j++){
                      string h = ""; 
                      h = h + s[j];
                      if(ourmap.count(h) > 0){
                          if(c > finalCount){
                             finalCount = c; 
                          }
                          c = 0;
                          break;
                      }
                      c++;
                      pair<string,int> p(h,1);
                      ourmap.insert(p);
                  }
                  if(c > finalCount){
                           finalCount = c; 
                  }
                  
              }  
        
               return finalCount;
              
    }
};

