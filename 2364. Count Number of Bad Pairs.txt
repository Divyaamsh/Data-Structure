#include <unordered_map>

class Solution {
public:
    long long countBadPairs(vector<int>& nums) {
                      long long size = nums.size(); 
                      unordered_map <long long,long long> ourmap;
                      vector <long long> v;
                      long long countG = 0;
                      long long totalnumber = (size * (size-1)) / 2;                   
        
                      for(int i=0; i<size; i++){
                          long long h = nums[i] - i;
                          if(ourmap.count(h) > 0){
                             ourmap[h]++;
                             continue; 
                          }
                          
                          pair <long long,long long> p(h,1);
                          ourmap.insert(p);
                          v.push_back(h);
                      }
        
                      long long size1 = v.size();   
                      for(int i = 0; i<size1; i++){
                          long long j = ourmap[v[i]];
                          countG = countG + (j * (j-1))/2;
                      }
        
        
                      return (totalnumber - countG);
        
    }
};

